const { chromium } = require('playwright');
const fs = require('fs');
const path = require('path');

// –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–∑ .env.local
require('dotenv').config({ path: path.join(__dirname, '..', '.env.local') });

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–º–æ–∂–Ω–æ –ø–µ—Ä–µ–æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è)
const AUTH_CONFIG = {
  email: process.env.SCREENSHOT_EMAIL || 'admin@example.com',
  password: process.env.SCREENSHOT_PASSWORD || 'admin123',
  baseUrl: process.env.SCREENSHOT_BASE_URL || 'http://localhost:3000'
};

// –°—Ç—Ä–∞–Ω–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Å–Ω–∏–º–∞—Ç—å –î–û –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const pagesBeforeAuth = [
  { url: `${AUTH_CONFIG.baseUrl}/auth`, name: 'auth-page', title: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' },
  { url: `${AUTH_CONFIG.baseUrl}/auth/signup`, name: 'signup-page', title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è' },
];

// –°—Ç—Ä–∞–Ω–∏—Ü—ã, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —Å–Ω–∏–º–∞—Ç—å –ü–û–°–õ–ï –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
const pagesAfterAuth = [
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  { url: `${AUTH_CONFIG.baseUrl}`, name: 'homepage', title: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞' },
  { url: `${AUTH_CONFIG.baseUrl}/room/101`, name: 'room-page', title: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–º–Ω–∞—Ç—ã' },
  { url: `${AUTH_CONFIG.baseUrl}/deliver/101`, name: 'deliver-page', title: '–í—ã–¥–∞—á–∞ –ø–∏—Å–µ–º' },
  
  // –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  { url: `${AUTH_CONFIG.baseUrl}/admin`, name: 'admin-dashboard', title: '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å' },
  { url: `${AUTH_CONFIG.baseUrl}/admin/letters`, name: 'admin-letters', title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Å—å–º–∞–º–∏' },
  { url: `${AUTH_CONFIG.baseUrl}/admin/users`, name: 'admin-users', title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏' },
  { url: `${AUTH_CONFIG.baseUrl}/admin/rooms`, name: 'admin-rooms', title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç–∞–º–∏' },
  
  // Showcase —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  { url: `${AUTH_CONFIG.baseUrl}/showcase`, name: 'showcase-overview', title: '–û–±–∑–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞' },
  { url: `${AUTH_CONFIG.baseUrl}/showcase/demo`, name: 'showcase-demo', title: '–î–µ–º–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è' },
  { url: `${AUTH_CONFIG.baseUrl}/showcase/features`, name: 'showcase-features', title: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏' },
  // { url: `${AUTH_CONFIG.baseUrl}/showcase/gallery`, name: 'showcase-gallery', title: '–ì–∞–ª–µ—Ä–µ—è' }, // –ò—Å–∫–ª—é—á–µ–Ω–æ - —Ä–µ–∫—É—Ä—Å–∏—è
  { url: `${AUTH_CONFIG.baseUrl}/showcase/tech-stack`, name: 'showcase-tech', title: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
  { url: `${AUTH_CONFIG.baseUrl}/showcase/architecture`, name: 'showcase-architecture', title: '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞' },
];

// –í—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
const allPages = [...pagesBeforeAuth, ...pagesAfterAuth];

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤
const devices = [
  {
    name: 'desktop',
    viewport: { width: 1920, height: 1080 },
    folder: 'desktop'
  },
  {
    name: 'mobile',
    viewport: { width: 375, height: 812 },
    folder: 'mobile'
  }
];

// –§—É–Ω–∫—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
async function loginAsAdmin(page) {
  console.log(`  üîê –ê–≤—Ç–æ—Ä–∏–∑—É—é—Å—å –∫–∞–∫ ${AUTH_CONFIG.email}...`);
  
  try {
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await page.goto(`${AUTH_CONFIG.baseUrl}/auth`, { 
      waitUntil: 'networkidle',
      timeout: 30000 
    });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–æ—Ä–º—ã
    await page.waitForSelector('input[type="email"]', { timeout: 10000 });
    
    // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await page.fill('input[type="email"]', AUTH_CONFIG.email);
    await page.fill('input[type="password"]', AUTH_CONFIG.password);
    
    // –ù–∞–∂–∏–º–∞–µ–º –∫–Ω–æ–ø–∫—É –≤—Ö–æ–¥–∞
    await page.click('button[type="submit"]');
    
    // –ñ–¥–µ–º —Ä–µ–¥–∏—Ä–µ–∫—Ç–∞ –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    await page.waitForURL(`${AUTH_CONFIG.baseUrl}/`, { timeout: 10000 });
    
    console.log('  ‚úÖ –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞');
    return true;
    
  } catch (error) {
    console.log(`  ‚ö†Ô∏è –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: ${error.message}`);
    console.log('  üí° –£–±–µ–¥–∏—Ç–µ—Å—å —á—Ç–æ:');
    console.log(`     - –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ ${AUTH_CONFIG.baseUrl}`);
    console.log(`     - –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${AUTH_CONFIG.email} —Å—É—â–µ—Å—Ç–≤—É–µ—Ç`);
    console.log('     - –ü–∞—Ä–æ–ª—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π');
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–¥–Ω–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
async function takeScreenshot(page, pageConfig, baseDir, device) {
  try {
    console.log(`  üì∏ ${pageConfig.title} (${pageConfig.name})`);
    
    // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
    await page.goto(pageConfig.url, { 
      waitUntil: 'networkidle',
      timeout: 30000 
    });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
    await page.waitForTimeout(3000);
    
    // –°–∫—Ä—ã–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª–±–∞—Ä—ã –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
    await page.addStyleTag({
      content: `
        ::-webkit-scrollbar { display: none; }
        * { scrollbar-width: none; }
        body { overflow-x: hidden; }
      `
    });
    
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –≤—Å–µ—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –∞–Ω–∏–º–∞—Ü–∏–π
    await page.waitForLoadState('networkidle');
    await page.waitForTimeout(2000);
    
    // –î–µ–ª–∞–µ–º –ø–æ–ª–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
    const screenshotPath = path.join(
      baseDir, 
      device.folder, 
      `${pageConfig.name}.png`
    );
    
    await page.screenshot({
      path: screenshotPath,
      fullPage: true,
      type: 'png',
      animations: 'disabled' // –û—Ç–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    });
    
    console.log(`    ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω: ${screenshotPath}`);
    
  } catch (error) {
    console.log(`    ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${pageConfig.url}: ${error.message}`);
  }
}

async function takeScreenshots() {
  const browser = await chromium.launch();
  
  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
  const baseDir = path.join(__dirname, '..', 'public', 'images', 'gallery');
  for (const device of devices) {
    const deviceDir = path.join(baseDir, device.folder);
    if (!fs.existsSync(deviceDir)) {
      fs.mkdirSync(deviceDir, { recursive: true });
    }
  }

  for (const device of devices) {
    console.log(`\nüì± –°–æ–∑–¥–∞—é ${device.name} —Å–∫—Ä–∏–Ω—à–æ—Ç—ã...`);
    
    const context = await browser.newContext({
      viewport: device.viewport,
      deviceScaleFactor: 2, // –î–ª—è —á–µ—Ç–∫–∏—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    });
    
    const page = await context.newPage();
    
    // –°–ù–ê–ß–ê–õ–ê –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–¥–æ –≤—Ö–æ–¥–∞ –≤ —Å–∏—Å—Ç–µ–º—É)
    console.log('  üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (–¥–æ –≤—Ö–æ–¥–∞)...');
    for (const pageConfig of pagesBeforeAuth) {
      await takeScreenshot(page, pageConfig, baseDir, device);
    }
    
    // –ó–ê–¢–ï–ú –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è –∏ –¥–µ–ª–∞–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü
    console.log('  üîê –ê–≤—Ç–æ—Ä–∏–∑—É—é—Å—å –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü...');
    const isLoggedIn = await loginAsAdmin(page);
    
    if (isLoggedIn) {
      console.log('  üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...');
      for (const pageConfig of pagesAfterAuth) {
        await takeScreenshot(page, pageConfig, baseDir, device);
      }
    } else {
      console.log('  ‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è, –ø—Ä–æ–ø—É—Å–∫–∞—é —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏');
    }
    
    await context.close();
  }
  
  await browser.close();
  console.log('\nüéâ –í—Å–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≥–æ—Ç–æ–≤—ã!');
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
  generateGalleryConfig();
}

function generateGalleryConfig() {
  console.log('\nüìù –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏...');
  
  const galleryItems = [];
  let id = 1;
  
  // –î–æ–±–∞–≤–ª—è–µ–º desktop –≤–µ—Ä—Å–∏–∏
  for (const pageConfig of allPages) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    let category = 'features';
    if (pageConfig.name.includes('admin')) {
      category = 'admin';
    } else if (['homepage', 'room-page', 'deliver-page'].includes(pageConfig.name)) {
      category = 'desktop';
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–≥–∏
    const tags = [];
    if (pageConfig.name.includes('admin')) tags.push('–ê–¥–º–∏–Ω');
    if (pageConfig.name.includes('auth')) tags.push('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
    if (pageConfig.name.includes('showcase')) tags.push('Showcase');
    if (pageConfig.name.includes('room')) tags.push('–ö–æ–º–Ω–∞—Ç—ã');
    if (pageConfig.name.includes('deliver')) tags.push('–í—ã–¥–∞—á–∞');
    if (pageConfig.name.includes('letters')) tags.push('–ü–∏—Å—å–º–∞');
    if (pageConfig.name.includes('users')) tags.push('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏');
    
    galleryItems.push({
      id: id.toString(),
      title: pageConfig.title,
      description: `–°–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageConfig.title}`,
      category: category,
      image: `/images/gallery/desktop/${pageConfig.name}.png`,
      tags: tags.length ? tags : ['UI/UX']
    });
    
    id++;
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º mobile –≤–µ—Ä—Å–∏–∏
  for (const pageConfig of allPages) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–≥–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    const tags = ['–ú–æ–±–∏–ª—å–Ω—ã–π'];
    if (pageConfig.name.includes('admin')) tags.push('–ê–¥–º–∏–Ω');
    if (pageConfig.name.includes('auth')) tags.push('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
    if (pageConfig.name.includes('showcase')) tags.push('Showcase');
    if (pageConfig.name.includes('room')) tags.push('–ö–æ–º–Ω–∞—Ç—ã');
    if (pageConfig.name.includes('deliver')) tags.push('–í—ã–¥–∞—á–∞');
    if (pageConfig.name.includes('letters')) tags.push('–ü–∏—Å—å–º–∞');
    if (pageConfig.name.includes('users')) tags.push('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏');
    
    galleryItems.push({
      id: id.toString(),
      title: `${pageConfig.title} (–ú–æ–±–∏–ª—å–Ω–∞—è)`,
      description: `–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è: ${pageConfig.title}`,
      category: 'mobile',
      image: `/images/gallery/mobile/${pageConfig.name}.png`,
      tags: tags
    });
    
    id++;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ñ–∞–π–ª
  const configPath = path.join(__dirname, 'gallery-config.json');
  fs.writeFileSync(configPath, JSON.stringify(galleryItems, null, 2));
  
  console.log(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${configPath}`);
  console.log('\nüìã –¢–µ–ø–µ—Ä—å —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ gallery-config.json –≤ src/app/showcase/gallery/page.tsx');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
takeScreenshots().catch(console.error); 