const { chromium } = require('playwright');
const fs = require('fs');
const path = require('path');

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
const pages = [
  // –û—Å–Ω–æ–≤–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
  { url: 'http://localhost:3000', name: 'homepage', title: '–ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞' },
  { url: 'http://localhost:3000/room/101', name: 'room-page', title: '–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∫–æ–º–Ω–∞—Ç—ã' },
  { url: 'http://localhost:3000/deliver/101', name: 'deliver-page', title: '–í—ã–¥–∞—á–∞ –ø–∏—Å–µ–º' },
  { url: 'http://localhost:3000/auth', name: 'auth-page', title: '–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' },
  { url: 'http://localhost:3000/auth/signup', name: 'signup-page', title: '–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è' },
  
  // –ê–¥–º–∏–Ω—Å–∫–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  { url: 'http://localhost:3000/admin', name: 'admin-dashboard', title: '–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å' },
  { url: 'http://localhost:3000/admin/letters', name: 'admin-letters', title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∏—Å—å–º–∞–º–∏' },
  { url: 'http://localhost:3000/admin/users', name: 'admin-users', title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏' },
  { url: 'http://localhost:3000/admin/rooms', name: 'admin-rooms', title: '–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–º–Ω–∞—Ç–∞–º–∏' },
  
  // Showcase —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  { url: 'http://localhost:3000/showcase', name: 'showcase-overview', title: '–û–±–∑–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞' },
  { url: 'http://localhost:3000/showcase/demo', name: 'showcase-demo', title: '–î–µ–º–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è' },
  { url: 'http://localhost:3000/showcase/features', name: 'showcase-features', title: '–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏' },
  { url: 'http://localhost:3000/showcase/gallery', name: 'showcase-gallery', title: '–ì–∞–ª–µ—Ä–µ—è' },
  { url: 'http://localhost:3000/showcase/tech-stack', name: 'showcase-tech', title: '–¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏' },
  { url: 'http://localhost:3000/showcase/architecture', name: 'showcase-architecture', title: '–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞' },
];

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤
const devices = [
  {
    name: 'desktop',
    viewport: { width: 1920, height: 1080 },
    folder: 'desktop'
  },
  {
    name: 'mobile',
    viewport: { width: 375, height: 812 },
    folder: 'mobile'
  }
];

async function takeScreenshots() {
  const browser = await chromium.launch();
  
  // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏ –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
  const baseDir = path.join(__dirname, '..', 'public', 'images', 'gallery');
  for (const device of devices) {
    const deviceDir = path.join(baseDir, device.folder);
    if (!fs.existsSync(deviceDir)) {
      fs.mkdirSync(deviceDir, { recursive: true });
    }
  }

  for (const device of devices) {
    console.log(`\nüì± –°–æ–∑–¥–∞—é ${device.name} —Å–∫—Ä–∏–Ω—à–æ—Ç—ã...`);
    
    const context = await browser.newContext({
      viewport: device.viewport,
      deviceScaleFactor: 2, // –î–ª—è —á–µ—Ç–∫–∏—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
    });
    
    const page = await context.newPage();
    
    for (const pageConfig of pages) {
      try {
        console.log(`  üì∏ ${pageConfig.title} (${pageConfig.name})`);
        
        // –ü–µ—Ä–µ—Ö–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
        await page.goto(pageConfig.url, { 
          waitUntil: 'networkidle',
          timeout: 30000 
        });
        
        // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        await page.waitForTimeout(2000);
        
        // –°–∫—Ä—ã–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª–±–∞—Ä—ã –¥–ª—è —á–∏—Å—Ç–æ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞
        await page.addStyleTag({
          content: `
            ::-webkit-scrollbar { display: none; }
            * { scrollbar-width: none; }
          `
        });
        
        // –î–µ–ª–∞–µ–º –ø–æ–ª–Ω–æ—Å—Ç—Ä–∞–Ω–∏—á–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
        const screenshotPath = path.join(
          baseDir, 
          device.folder, 
          `${pageConfig.name}.png`
        );
        
        await page.screenshot({
          path: screenshotPath,
          fullPage: true,
          type: 'png'
        });
        
        console.log(`    ‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω: ${screenshotPath}`);
        
      } catch (error) {
        console.log(`    ‚ùå –û—à–∏–±–∫–∞ –¥–ª—è ${pageConfig.url}: ${error.message}`);
      }
    }
    
    await context.close();
  }
  
  await browser.close();
  console.log('\nüéâ –í—Å–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≥–æ—Ç–æ–≤—ã!');
  
  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏
  generateGalleryConfig();
}

function generateGalleryConfig() {
  console.log('\nüìù –ì–µ–Ω–µ—Ä–∏—Ä—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –≥–∞–ª–µ—Ä–µ–∏...');
  
  const galleryItems = [];
  let id = 1;
  
  // –î–æ–±–∞–≤–ª—è–µ–º desktop –≤–µ—Ä—Å–∏–∏
  for (const pageConfig of pages) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é
    let category = 'features';
    if (pageConfig.name.includes('admin')) {
      category = 'admin';
    } else if (['homepage', 'room-page', 'deliver-page'].includes(pageConfig.name)) {
      category = 'desktop';
    }
    
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–≥–∏
    const tags = [];
    if (pageConfig.name.includes('admin')) tags.push('–ê–¥–º–∏–Ω');
    if (pageConfig.name.includes('auth')) tags.push('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
    if (pageConfig.name.includes('showcase')) tags.push('Showcase');
    if (pageConfig.name.includes('room')) tags.push('–ö–æ–º–Ω–∞—Ç—ã');
    if (pageConfig.name.includes('deliver')) tags.push('–í—ã–¥–∞—á–∞');
    if (pageConfig.name.includes('letters')) tags.push('–ü–∏—Å—å–º–∞');
    if (pageConfig.name.includes('users')) tags.push('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏');
    
    galleryItems.push({
      id: id.toString(),
      title: pageConfig.title,
      description: `–°–∫—Ä–∏–Ω—à–æ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã: ${pageConfig.title}`,
      category: category,
      image: `/images/gallery/desktop/${pageConfig.name}.png`,
      tags: tags.length ? tags : ['UI/UX']
    });
    
    id++;
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º mobile –≤–µ—Ä—Å–∏–∏
  for (const pageConfig of pages) {
    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–µ–≥–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏
    const tags = ['–ú–æ–±–∏–ª—å–Ω—ã–π'];
    if (pageConfig.name.includes('admin')) tags.push('–ê–¥–º–∏–Ω');
    if (pageConfig.name.includes('auth')) tags.push('–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
    if (pageConfig.name.includes('showcase')) tags.push('Showcase');
    if (pageConfig.name.includes('room')) tags.push('–ö–æ–º–Ω–∞—Ç—ã');
    if (pageConfig.name.includes('deliver')) tags.push('–í—ã–¥–∞—á–∞');
    if (pageConfig.name.includes('letters')) tags.push('–ü–∏—Å—å–º–∞');
    if (pageConfig.name.includes('users')) tags.push('–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏');
    
    galleryItems.push({
      id: id.toString(),
      title: `${pageConfig.title} (–ú–æ–±–∏–ª—å–Ω–∞—è)`,
      description: `–ú–æ–±–∏–ª—å–Ω–∞—è –≤–µ—Ä—Å–∏—è: ${pageConfig.title}`,
      category: 'mobile',
      image: `/images/gallery/mobile/${pageConfig.name}.png`,
      tags: tags
    });
    
    id++;
  }
  
  // –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –≤ —Ñ–∞–π–ª
  const configPath = path.join(__dirname, 'gallery-config.json');
  fs.writeFileSync(configPath, JSON.stringify(galleryItems, null, 2));
  
  console.log(`‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${configPath}`);
  console.log('\nüìã –¢–µ–ø–µ—Ä—å —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ gallery-config.json –≤ src/app/showcase/gallery/page.tsx');
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
takeScreenshots().catch(console.error); 