import React from 'react';
import { Typography, Box, Card, Paper, Chip, useTheme } from '@mui/material';
import { motion } from 'framer-motion';
import { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';
import { oneDark } from 'react-syntax-highlighter/dist/esm/styles/prism';
import { securityTabStyles } from './SecurityTab.styles';

interface SecurityFeature {
  title: string;
  description: string;
  icon: string;
  features: string[];
}

const securityFeatures: SecurityFeature[] = [
  {
    title: 'Row Level Security',
    description: '–ó–∞—â–∏—Ç–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —É—Ä–æ–≤–Ω–µ —Å—Ç—Ä–æ–∫ –≤ PostgreSQL',
    icon: 'üîí',
    features: [
      '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è',
      '–ü–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞',
      '–ó–∞—â–∏—Ç–∞ –æ—Ç SQL-–∏–Ω—ä–µ–∫—Ü–∏–π',
      '–ö–æ–Ω—Ç—Ä–æ–ª—å –ø–æ —Ä–æ–ª—è–º',
    ],
  },
  {
    title: 'JWT Authentication',
    description: '–ë–µ–∑–æ–ø–∞—Å–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è —Å —Ç–æ–∫–µ–Ω–∞–º–∏',
    icon: 'üé´',
    features: [
      '–°—Ç–∞—Çeless —Ç–æ–∫–µ–Ω—ã',
      '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ',
      '–ó–∞—â–∏—â–µ–Ω–Ω—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã',
      'Middleware –ø—Ä–æ–≤–µ—Ä–∫–∞',
    ],
  },
  {
    title: 'API Protection',
    description: '–ó–∞—â–∏—Ç–∞ API —ç–Ω–¥–ø–æ–∏–Ω—Ç–æ–≤',
    icon: 'üõ°Ô∏è',
    features: [
      'Rate limiting',
      'CORS –Ω–∞—Å—Ç—Ä–æ–π–∫–∏',
      '–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
      '–õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤',
    ],
  },
  {
    title: 'Data Encryption',
    description: '–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ —á—É–≤—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö',
    icon: 'üîê',
    features: ['HTTPS/TLS', '–•–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞—Ä–æ–ª–µ–π', '–®–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ –≤ –ë–î', '–ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ cookies'],
  },
];

export function SecurityTab() {
  const theme = useTheme();
  const isDark = theme.palette.mode === 'dark';

  return (
    <>
      <Typography variant="h4" sx={securityTabStyles.title}>
        –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å
      </Typography>

      <Box sx={securityTabStyles.securityGrid}>
        {securityFeatures.map((security, index) => (
          <Box
            key={security.title}
            sx={{
              gridColumn: { xs: '1', md: index < 2 ? '1 / -1' : 'auto' },
            }}
          >
            <motion.div
              initial={{ opacity: 0, scale: 0 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ delay: index * 0.1 }}
            >
              <Card
                sx={{
                  ...securityTabStyles.securityCard,
                  bgcolor: isDark ? 'grey.900' : 'background.paper',
                  border: `1px solid ${isDark ? 'grey.700' : '#e2e8f0'}`,
                }}
              >
                <Typography variant="h3" sx={securityTabStyles.securityIcon}>
                  {security.icon}
                </Typography>
                <Typography variant="h6" sx={securityTabStyles.securityTitle}>
                  {security.title}
                </Typography>
                <Typography
                  variant="body2"
                  color="text.secondary"
                  sx={securityTabStyles.securityDescription}
                >
                  {security.description}
                </Typography>
                {security.features.map((feature, featureIndex) => (
                  <Chip
                    key={featureIndex}
                    label={feature}
                    size="small"
                    variant="outlined"
                    sx={securityTabStyles.featureChip}
                  />
                ))}
              </Card>
            </motion.div>
          </Box>
        ))}
      </Box>

      <Paper
        sx={{
          ...securityTabStyles.codePaper,
          bgcolor: isDark ? 'grey.900' : 'background.paper',
        }}
      >
        <Typography variant="h5" sx={securityTabStyles.codeTitle}>
          –ü—Ä–∏–º–µ—Ä RLS –ø–æ–ª–∏—Ç–∏–∫–∏
        </Typography>
        <SyntaxHighlighter language="sql" style={oneDark} customStyle={securityTabStyles.codeStyle}>
          {`-- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã letters
CREATE POLICY "Users can view own letters" ON letters
  FOR SELECT USING (
    auth.uid() = user_id OR 
    auth.jwt() ->> 'role' = 'admin'
  );

-- –ü–æ–ª–∏—Ç–∏–∫–∞ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ –ø–∏—Å–µ–º (—Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω—ã)
CREATE POLICY "Only admins can insert letters" ON letters
  FOR INSERT WITH CHECK (
    auth.jwt() ->> 'role' = 'admin'
  );`}
        </SyntaxHighlighter>
      </Paper>
    </>
  );
}
